#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
#ifndef DRIVEKITTRIPANALYSISMODULE_SWIFT_H
#define DRIVEKITTRIPANALYSISMODULE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import DriveKitCoreModule;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="DriveKitTripAnalysisModule",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;

SWIFT_CLASS("_TtC26DriveKitTripAnalysisModule10BeaconData")
@interface BeaconData : NSObject
- (nonnull instancetype)initWithProximityUuid:(NSString * _Nonnull)proximityUuid major:(NSInteger)major minor:(NSInteger)minor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithProximityUuid:(NSString * _Nonnull)proximityUuid major:(NSInteger)major OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithProximityUuid:(NSString * _Nonnull)proximityUuid OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC26DriveKitTripAnalysisModule13BluetoothData")
@interface BluetoothData : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull macAddress;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name macAddress:(NSString * _Nonnull)macAddress OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




typedef SWIFT_ENUM(NSInteger, CancelTrip, open) {
  CancelTripUser = 0,
  CancelTripHighspeed = 1,
  CancelTripNoSpeed = 2,
  CancelTripNoBeacon = 3,
  CancelTripNoBluetoothDevice = 8,
  CancelTripMissingConfiguration = 4,
  CancelTripNoGPSData = 5,
  CancelTripReset = 6,
  CancelTripBeaconNoSpeed = 7,
  CancelTripBluetoothDeviceNoSpeed = 9,
};


SWIFT_PROTOCOL("_TtP26DriveKitTripAnalysisModule21CrashFeedbackDelegate_")
@protocol CrashFeedbackDelegate
- (void)didUpdateProgressWithRemainingSeconds:(NSTimeInterval)remainingSeconds totalSeconds:(NSTimeInterval)totalSeconds;
- (void)timeoutReached;
- (void)confirmationTimeoutReached;
@end

typedef SWIFT_ENUM(NSInteger, DKCrashAlert, open) {
  DKCrashAlertSilence = 0,
  DKCrashAlertVibration = 1,
  DKCrashAlertSoundAndVibration = 2,
};


SWIFT_CLASS("_TtC26DriveKitTripAnalysisModule21DKCrashFeedbackConfig")
@interface DKCrashFeedbackConfig : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC26DriveKitTripAnalysisModule27DKCrashFeedbackNotification")
@interface DKCrashFeedbackNotification : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DKCrashFeedbackSeverity, open) {
  DKCrashFeedbackSeverityNone = 0,
  DKCrashFeedbackSeverityMinor = 1,
  DKCrashFeedbackSeverityCritical = 2,
};

typedef SWIFT_ENUM(NSInteger, DKCrashFeedbackType, open) {
  DKCrashFeedbackTypeNoCrash = 0,
  DKCrashFeedbackTypeConfirmed = 1,
  DKCrashFeedbackTypeNoFeedback = 2,
};


SWIFT_CLASS("_TtC26DriveKitTripAnalysisModule11DKCrashInfo")
@interface DKCrashInfo : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DKCrashStatus, open) {
  DKCrashStatusUnconfirmed = 0,
  DKCrashStatusConfirmed = 1,
};

typedef SWIFT_ENUM(NSInteger, DKCreateTripSharingLinkStatus, open) {
  DKCreateTripSharingLinkStatusSuccess = 0,
  DKCreateTripSharingLinkStatusUserNotConnected = 1,
  DKCreateTripSharingLinkStatusInvalidDuration = 2,
  DKCreateTripSharingLinkStatusUnauthenticated = 3,
  DKCreateTripSharingLinkStatusForbidden = 4,
  DKCreateTripSharingLinkStatusActiveLinkAlreadyExists = 5,
  DKCreateTripSharingLinkStatusError = 6,
};

typedef SWIFT_ENUM(NSInteger, DKGetTripSharingLinkStatus, open) {
  DKGetTripSharingLinkStatusSuccess = 0,
  DKGetTripSharingLinkStatusFailedToGetCacheOnly = 1,
  DKGetTripSharingLinkStatusUserNotConnected = 2,
  DKGetTripSharingLinkStatusUnauthenticated = 3,
  DKGetTripSharingLinkStatusForbidden = 4,
  DKGetTripSharingLinkStatusNoActiveLink = 5,
};

typedef SWIFT_ENUM(NSInteger, DKRevokeTripSharingLinkStatus, open) {
  DKRevokeTripSharingLinkStatusSuccess = 0,
  DKRevokeTripSharingLinkStatusError = 1,
  DKRevokeTripSharingLinkStatusUserNotConnected = 2,
  DKRevokeTripSharingLinkStatusUnauthenticated = 3,
  DKRevokeTripSharingLinkStatusForbidden = 4,
  DKRevokeTripSharingLinkStatusNoActiveLink = 5,
};

typedef SWIFT_ENUM(NSInteger, DKTripCancelationReason, open) {
  DKTripCancelationReasonUser = 0,
  DKTripCancelationReasonHighSpeed = 1,
  DKTripCancelationReasonNoSpeed = 2,
  DKTripCancelationReasonNoBeacon = 3,
  DKTripCancelationReasonNoBluetoothDevice = 4,
  DKTripCancelationReasonMissingConfiguration = 5,
  DKTripCancelationReasonNoLocationData = 6,
  DKTripCancelationReasonReset = 7,
  DKTripCancelationReasonBeaconNoSpeed = 8,
  DKTripCancelationReasonBluetoothDeviceNoSpeed = 9,
  DKTripCancelationReasonAppKilled = 10,
};

@class NSDate;
enum StartMode : NSInteger;

SWIFT_PROTOCOL("_TtP26DriveKitTripAnalysisModule10DKTripInfo_")
@protocol DKTripInfo
@property (nonatomic, readonly, copy) NSString * _Nonnull localTripId;
@property (nonatomic, readonly, copy) NSDate * _Nonnull date;
@property (nonatomic, readonly) enum StartMode startMode;
@end


SWIFT_PROTOCOL("_TtP26DriveKitTripAnalysisModule20DKTripRecordingState_")
@protocol DKTripRecordingState
@property (nonatomic, readonly, copy) NSString * _Nonnull localTripId;
@property (nonatomic, readonly) enum StartMode startMode;
@property (nonatomic, readonly, copy) NSDate * _Nonnull recordingStartDate;
@end


SWIFT_PROTOCOL("_TtP26DriveKitTripAnalysisModule28DKTripRecordingCanceledState_")
@protocol DKTripRecordingCanceledState <DKTripRecordingState>
@property (nonatomic, readonly) enum DKTripCancelationReason cancelationReason;
@property (nonatomic, readonly, copy) NSDate * _Nullable recordingConfirmationDate;
@end


SWIFT_PROTOCOL("_TtP26DriveKitTripAnalysisModule29DKTripRecordingConfirmedState_")
@protocol DKTripRecordingConfirmedState <DKTripRecordingState>
@property (nonatomic, readonly, copy) NSDate * _Nonnull recordingConfirmationDate;
@end


SWIFT_PROTOCOL("_TtP26DriveKitTripAnalysisModule28DKTripRecordingFinishedState_")
@protocol DKTripRecordingFinishedState <DKTripRecordingState>
@property (nonatomic, readonly, copy) NSDate * _Nonnull recordingConfirmationDate;
@property (nonatomic, readonly, copy) NSDate * _Nonnull recordingEndDate;
@end


SWIFT_PROTOCOL("_TtP26DriveKitTripAnalysisModule27DKTripRecordingStartedState_")
@protocol DKTripRecordingStartedState <DKTripRecordingState>
@end



SWIFT_CLASS("_TtC26DriveKitTripAnalysisModule13DKTripSharing")
@interface DKTripSharing : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP26DriveKitTripAnalysisModule17DKTripSharingLink_")
@protocol DKTripSharingLink
@property (nonatomic, readonly, copy) NSString * _Nonnull url;
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSDate * _Nonnull startDate;
@property (nonatomic, readonly, copy) NSDate * _Nonnull endDate;
@end

enum DKWorkingHoursTimeSlotStatus : NSInteger;
@class DKWorkingHoursDayConfiguration;

SWIFT_CLASS("_TtC26DriveKitTripAnalysisModule14DKWorkingHours")
@interface DKWorkingHours : NSObject
@property (nonatomic) BOOL enabled;
@property (nonatomic) enum DKWorkingHoursTimeSlotStatus insideHours;
@property (nonatomic) enum DKWorkingHoursTimeSlotStatus outsideHours;
@property (nonatomic, copy) NSArray<DKWorkingHoursDayConfiguration *> * _Nonnull workingHoursDayConfigurations;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC26DriveKitTripAnalysisModule30DKWorkingHoursDayConfiguration")
@interface DKWorkingHoursDayConfiguration : NSObject
@property (nonatomic) enum DKDay day;
@property (nonatomic) BOOL entireDayOff;
@property (nonatomic) double startTime;
@property (nonatomic) double endTime;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DKWorkingHoursSyncStatus, open) {
  DKWorkingHoursSyncStatusSuccess = 0,
  DKWorkingHoursSyncStatusCacheOnly = 1,
  DKWorkingHoursSyncStatusFailed = 2,
};

typedef SWIFT_ENUM(NSInteger, DKWorkingHoursTimeSlotStatus, open) {
  DKWorkingHoursTimeSlotStatusDisabled = 0,
  DKWorkingHoursTimeSlotStatusPersonal = 1,
  DKWorkingHoursTimeSlotStatusBusiness = 2,
};

typedef SWIFT_ENUM(NSInteger, DKWorkingHoursUpdateStatus, open) {
  DKWorkingHoursUpdateStatusSuccess = 0,
  DKWorkingHoursUpdateStatusFailed = 1,
  DKWorkingHoursUpdateStatusInvalidDayOfWeek = 2,
  DKWorkingHoursUpdateStatusInvalidStartOrEndTime = 3,
  DKWorkingHoursUpdateStatusStartTimeGreaterThanEndTime = 4,
  DKWorkingHoursUpdateStatusDuplicatedDay = 5,
  DKWorkingHoursUpdateStatusInvalidDayCount = 6,
};

@class TripAnalysisConfig;
@protocol TripListener;
@class TripVehicle;
@protocol DKTripLocation;
enum State : NSInteger;
@class PostGenericResponse;
@class TripResponseStatus;

SWIFT_CLASS("_TtC26DriveKitTripAnalysisModule20DriveKitTripAnalysis")
@interface DriveKitTripAnalysis : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull sdkVersion;)
+ (NSString * _Nonnull)sdkVersion SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DriveKitTripAnalysis * _Nonnull shared;)
+ (DriveKitTripAnalysis * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL isCrashDetectionAvailable;
@property (nonatomic) BOOL monitorPotentialTripStart;
@property (nonatomic) BOOL allowBeaconTripStart;
@property (nonatomic) double autoCancelTripMaxSpeed;
@property (nonatomic, readonly, strong) TripAnalysisConfig * _Nonnull config;
@property (nonatomic, readonly) BOOL isInitialized;
@property (nonatomic, readonly) NSInteger stopTimeOut;
@property (nonatomic, readonly, strong) DKTripSharing * _Nonnull tripSharing;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)initializeWithTripListener:(id <TripListener> _Nullable)tripListener appLaunchOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)appLaunchOptions;
- (void)activateLowPowerModeWithEnable:(BOOL)enable;
- (void)activateCrashDetection:(BOOL)enable;
- (void)disableCrashFeedback;
- (void)enableCrashFeedbackWithConfig:(DKCrashFeedbackConfig * _Nonnull)config;
- (void)activateActivityRecording:(BOOL)enable;
- (void)activateAutoStartWithEnable:(BOOL)enable;
- (void)setBeaconRequiredWithRequired:(BOOL)required;
- (void)setBluetoothDeviceRequired:(BOOL)required;
- (void)enableSharePositionWithEnable:(BOOL)enable;
- (void)setVehicleIdWithId:(NSString * _Nullable)id;
- (void)setVehicleWithVehicle:(TripVehicle * _Nullable)vehicle;
- (void)setStopTimeOutWithTimeOut:(NSInteger)timeOut;
- (void)setBeaconsWithBeacons:(NSArray<BeaconData *> * _Nonnull)beacons;
- (NSArray<BeaconData *> * _Nonnull)getAllBeacons SWIFT_WARN_UNUSED_RESULT;
- (void)setBluetoothDevicesWithBluetoothDevices:(NSArray<BluetoothData *> * _Nonnull)bluetoothDevices;
- (NSArray<BluetoothData *> * _Nonnull)getAllBluetoothDevices SWIFT_WARN_UNUSED_RESULT;
- (NSArray<BluetoothData *> * _Nonnull)getAvailableBluetoothDevices SWIFT_WARN_UNUSED_RESULT;
- (void)setTripMetadata:(NSDictionary<NSString *, NSString *> * _Nullable)metadata;
- (NSDictionary<NSString *, NSString *> * _Nullable)getTripMetadata SWIFT_WARN_UNUSED_RESULT;
- (void)updateTripMetadataWithKey:(NSString * _Nonnull)key value:(NSString * _Nullable)value;
- (void)deleteTripMetadataWithKey:(NSString * _Nonnull)key;
- (void)deleteTripMetadata;
- (void)addTripListener:(id <TripListener> _Nonnull)tripListener;
- (void)removeTripListener:(id <TripListener> _Nonnull)tripListener;
- (void)removeAllTripListeners;
- (void)startTrip;
- (void)stopTrip;
- (void)cancelTrip;
- (id <DKTripInfo> _Nullable)getCurrentTripInfo SWIFT_WARN_UNUSED_RESULT;
- (id <DKTripLocation> _Nullable)getLastTripLocation SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getCurrentStartMode SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("This method is now deprecated and will be removed in a future version, at the end of 2025. Use `getCurrentTripInfo()?.startMode` instead.");
- (BOOL)isConfigured SWIFT_WARN_UNUSED_RESULT;
- (void)checkTripToRepost;
- (void)checkTripToRepost:(BOOL)fromBackground;
- (BOOL)isTripRunning SWIFT_WARN_UNUSED_RESULT;
- (enum State)getRecorderState SWIFT_WARN_UNUSED_RESULT;
- (NSDate * _Nullable)temporaryDeactivationEndDate SWIFT_WARN_UNUSED_RESULT;
- (void)temporaryDeactivateSDKWithMinutes:(NSInteger)minutes;
- (void)cancelTemporaryDeactivation;
- (void)getWorkingHoursWithType:(enum SynchronizationType)type completion:(void (^ _Nonnull)(enum DKWorkingHoursSyncStatus, DKWorkingHours * _Nullable))completion;
- (void)updateWorkingHoursWithWorkingHours:(DKWorkingHours * _Nonnull)workingHours completion:(void (^ _Nonnull)(enum DKWorkingHoursUpdateStatus))completion;
- (void)sendCrashFeedbackWithCrashInfo:(DKCrashInfo * _Nonnull)crashInfo confirmed:(enum DKCrashFeedbackType)confirmed severity:(enum DKCrashFeedbackSeverity)severity;
- (DKCrashInfo * _Nullable)crashFeedbackNotificationOpenedWithCrashId:(NSString * _Nonnull)crashId SWIFT_WARN_UNUSED_RESULT;
- (DKCrashInfo * _Nullable)noCrashConfirmationOpenedWithCrashId:(NSString * _Nonnull)crashId SWIFT_WARN_UNUSED_RESULT;
- (void)registerCrashFeedbackDelegateWithDelegate:(id <CrashFeedbackDelegate> _Nonnull)delegate;
- (void)unregisterCrashFeedbackDelegateWithDelegate:(id <CrashFeedbackDelegate> _Nonnull)delegate;
- (TripResponseStatus * _Nonnull)getTripResponseStatus:(PostGenericResponse * _Nonnull)tripResponse SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("This method will be removed in a future version, at the end of 2025");
- (void)reset SWIFT_DEPRECATED_MSG("You no longer need to call the reset method of any module except the one in DriveKit");
@end

@class DriveKit;

@interface DriveKitTripAnalysis (SWIFT_EXTENSION(DriveKitTripAnalysisModule)) <DriveKitDelegate>
- (void)driveKitDidConnect:(DriveKit * _Nonnull)driveKit;
@end

@class CLLocation;
@class TripPoint;
@class PostGeneric;

SWIFT_PROTOCOL("_TtP26DriveKitTripAnalysisModule12TripListener_")
@protocol TripListener
@optional
- (void)tripRecordingStartedWithState:(id <DKTripRecordingStartedState> _Nonnull)state;
- (void)tripRecordingConfirmedWithState:(id <DKTripRecordingConfirmedState> _Nonnull)state;
- (void)tripRecordingCanceledWithState:(id <DKTripRecordingCanceledState> _Nonnull)state;
- (void)tripRecordingFinishedWithState:(id <DKTripRecordingFinishedState> _Nonnull)state;
- (void)beaconDetected;
- (void)significantLocationChangeDetectedWithLocation:(CLLocation * _Nonnull)location;
- (void)potentialTripStartWithStartMode:(enum StartMode)startMode;
- (void)sdkStateChangedWithState:(enum State)state;
- (void)tripPointWithTripPoint:(TripPoint * _Nonnull)tripPoint;
- (void)tripFinishedWithResponseStatus:(TripResponseStatus * _Nonnull)responseStatus;
- (void)tripSavedForRepost;
- (void)crashDetectedWithCrashInfo:(DKCrashInfo * _Nonnull)crashInfo;
- (void)crashFeedbackSentWithCrashInfo:(DKCrashInfo * _Nonnull)crashInfo feedbackType:(enum DKCrashFeedbackType)feedbackType severity:(enum DKCrashFeedbackSeverity)severity;
- (void)tripStartedWithStartMode:(enum StartMode)startMode SWIFT_DEPRECATED_MSG("This method will be removed in a future version, at the end of 2025. It is replaced by `tripRecordingConfirmed(state: TripRecordingConfirmedState)`.");
- (void)tripFinishedWithPost:(PostGeneric * _Nonnull)post response:(PostGenericResponse * _Nonnull)response SWIFT_DEPRECATED_MSG("This method will be removed in a future version, at the end of 2025. It is replaced by `tripFinished(responseStatus: TripResponseStatus)`.");
- (void)tripCancelledWithCancelTrip:(enum CancelTrip)cancelTrip SWIFT_DEPRECATED_MSG("This method will be removed in a future version, at the end of 2025. It is replaced by `tripRecordingCanceled(state: TripRecordingCanceledState)`.");
@end


@interface DriveKitTripAnalysis (SWIFT_EXTENSION(DriveKitTripAnalysisModule)) <TripListener>
- (void)tripStartedWithStartMode:(enum StartMode)startMode;
- (void)tripFinishedWithResponseStatus:(TripResponseStatus * _Nonnull)responseStatus;
- (void)potentialTripStartWithStartMode:(enum StartMode)startMode;
@end



SWIFT_CLASS("_TtC26DriveKitTripAnalysisModule11PostGeneric") SWIFT_DEPRECATED_MSG("This class will be removed in a future version, at the end of 2025.")
@interface PostGeneric : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC26DriveKitTripAnalysisModule19PostGenericResponse") SWIFT_DEPRECATED_MSG("This class will be removed in a future version, at the end of 2025.")
@interface PostGenericResponse : NSObject
@property (nonatomic, readonly) BOOL status;
@property (nonatomic, copy) NSString * _Nullable itinId;
@property (nonatomic, copy) NSString * _Nonnull endDate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


typedef SWIFT_ENUM(NSInteger, StartMode, open) {
  StartModeGps = 1,
  StartModeBeacon = 2,
  StartModeManual = 3,
  StartModeGeozone = 4,
  StartModeBluetooth = 5,
  StartModeBluetooth_unknown = 6,
};

typedef SWIFT_ENUM(NSInteger, State, open) {
  StateInactive = 0,
  StateStarting = 1,
  StateRunning = 2,
  StateStopping = 3,
  StateSending = 4,
};


SWIFT_CLASS("_TtC26DriveKitTripAnalysisModule18TripAnalysisConfig")
@interface TripAnalysisConfig : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC26DriveKitTripAnalysisModule9TripPoint")
@interface TripPoint : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, TripResponseError, open) {
  TripResponseErrorNoAccountSet = 10,
  TripResponseErrorNoRouteObjectFound = 13,
  TripResponseErrorInvalidRouteDefinition = 14,
  TripResponseErrorNoVelocityData = 15,
  TripResponseErrorInvalidSamplingPeriod = 19,
  TripResponseErrorInvalidCustomerId = 21,
  TripResponseErrorNoDateFound = 23,
  TripResponseErrorMaxDailyRequestNumberReached = 24,
  TripResponseErrorDataError = 26,
  TripResponseErrorInvalidRouteVectors = 27,
  TripResponseErrorMissingBeacon = 29,
  TripResponseErrorInvalidBeacon = 30,
  TripResponseErrorDuplicateTrip = 31,
  TripResponseErrorInsufficientGpsData = 33,
  TripResponseErrorUserDisabled = 34,
  TripResponseErrorInvalidUser = 35,
  TripResponseErrorInvalidGpsData = 36,
  TripResponseErrorInvalidTrip = 37,
  TripResponseErrorAccountLimitReached = 38,
};

typedef SWIFT_ENUM(NSInteger, TripResponseInfo, open) {
  TripResponseInfoEngineSpeedNotAvailable = 16,
  TripResponseInfoEngineSpeedIsNull = 17,
  TripResponseInfoNoVehicleCharacteristics = 18,
  TripResponseInfoDataLoss = 20,
  TripResponseInfoDistanceTooShort = 25,
  TripResponseInfoInvalidVehicleCharacteristics = 28,
  TripResponseInfoInvalidVehicleId = 32,
};

enum TripResponseStatusType : NSInteger;
@class DKTrip;

SWIFT_CLASS("_TtC26DriveKitTripAnalysisModule18TripResponseStatus")
@interface TripResponseStatus : NSObject
@property (nonatomic, readonly) enum TripResponseStatusType status;
@property (nonatomic, readonly, copy) NSString * _Nullable itinId;
@property (nonatomic, readonly, copy) NSString * _Nullable localTripId;
@property (nonatomic, readonly) BOOL hasSafetyAndEcoDrivingScore;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull info;
@property (nonatomic, readonly) NSInteger error;
- (DKTrip * _Nullable)getTripObject SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, TripResponseStatusType, open) {
  TripResponseStatusTypeTripValid = 0,
  TripResponseStatusTypeTripError = 1,
};


SWIFT_CLASS("_TtC26DriveKitTripAnalysisModule11TripVehicle")
@interface TripVehicle : NSObject
@property (nonatomic) NSInteger carTypeIndex;
@property (nonatomic) NSInteger carEngineIndex;
@property (nonatomic) double carPower;
@property (nonatomic) double carMass;
@property (nonatomic) NSInteger carGearboxIndex;
@property (nonatomic) double carConsumption;
@property (nonatomic) NSInteger carAutoGearboxNumber;
@property (nonatomic) double engineDisplacement;
@property (nonatomic) NSInteger carPassengers;
@property (nonatomic, copy) NSString * _Nullable dqIndex;
@property (nonatomic, copy) NSString * _Nullable sra;
@property (nonatomic, copy) NSString * _Nullable frontTireSize;
@property (nonatomic, copy) NSString * _Nullable rearTireSize;
@property (nonatomic) double length;
@property (nonatomic) double width;
@property (nonatomic) double height;
@property (nonatomic) NSInteger engineCylinderNb;
@property (nonatomic) NSInteger driveWheels;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (TripVehicle * _Nonnull)defaultVehicle SWIFT_WARN_UNUSED_RESULT;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
